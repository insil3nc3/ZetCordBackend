import logging

logger = logging.getLogger("websocket")
logger.setLevel(logging.INFO)  # –∏–ª–∏ DEBUG
async def handle_ice_candidate(data, user_id, session, db, manager):
    target_user_id = data.get("to")
    candidate = data.get("candidate")
    logger.info(f"üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ ICE –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –æ—Ç user_id={user_id} –¥–ª—è target_user_id={target_user_id}: {candidate}")
    if target_user_id and candidate:
        target_socket = await manager.get_socket(target_user_id)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω await
        if target_socket:
            await target_socket.send_json({
                "type": "ice_candidate",
                "from": user_id,
                "candidate": candidate
            })
            logger.info(f"üì§ ICE –∫–∞–Ω–¥–∏–¥–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}")
        else:
            logger.warning(f"‚ö†Ô∏è –°–æ–∫–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        logger.warning(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ICE –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: target_user_id={target_user_id}, candidate={candidate}")